// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model Jugador {
  id               Int                  @id @default(autoincrement())
  nombres          String               @db.VarChar
  apellidos        String               @db.VarChar
  nombre_corto     String               @db.VarChar
  cedula           String               @unique @db.VarChar
  RH               String               @db.VarChar
  telefono         String               @db.VarChar
  email            String               @db.VarChar
  talla_camiseta   String
  fecha_nacimiento String
  estado           Boolean              @default(true)
  tipo             String //integrante - invitado 
  id_telegram      String?
  edad             Int?
  socio            Boolean?             @default(false)
  posiciones       Jugador_Posiciones[] // Campo de relaci√≥n inversa
  partidos         Partido_Jugadores[]
}

model Jugador_Posiciones {
  id          Int      @id @default(autoincrement())
  id_jugador  Int
  id_posicion Int
  tipo        String
  posicion    Posicion @relation(fields: [id_posicion], references: [id])
  jugador     Jugador  @relation(fields: [id_jugador], references: [id])
}

model Posicion {
  id         Int                  @id @default(autoincrement())
  posicion   String
  sigla      String
  posiciones Jugador_Posiciones[]
}

model Tipo_Partido {
  id          Int       @id @default(autoincrement())
  tipo        String
  descripcion String
  partidos    Partido[]
}

model Partido {
  id           Int                 @id @default(autoincrement())
  id_tipo      Int?                @default(1)
  fecha        String
  lugar        String
  hora         String
  valor        Int?
  jugadores    Partido_Jugadores[]
  tipo_partido Tipo_Partido?       @relation(fields: [id_tipo], references: [id])
}

model Partido_Jugadores {
  id               Int                @id @default(autoincrement())
  id_jugador       Int
  id_partido       Int
  equipo           String             @default("")
  tarjeta_amarilla Int?               @default(0)
  tarjeta_roja     Int?               @default(0)
  goles            Int?               @default(0)
  autogoles        Int?               @default(0)
  comentarios      String?
  calificacion     Float?             @default(0)
  goles_arquero    Int?
  dt_ganador       Int?
  estado_pago      Boolean?           @default(false)
  jugador          Jugador            @relation(fields: [id_jugador], references: [id])
  partido          Partido            @relation(fields: [id_partido], references: [id])
  Encuesta_Partido Encuesta_Partido[]
}

model Encuesta_Partido {
  id                    Int                     @id @default(autoincrement())
  id_partido_jugador    Int
  estado                Boolean
  fecha_creacion        String
  partido_jugador       Partido_Jugadores       @relation(fields: [id_partido_jugador], references: [id])
  Votos_Partido_Jugador Votos_Partido_Jugador[]
}

model Votos_Partido_Jugador {
  id                    Int              @id @default(autoincrement())
  id_encuesta_partido   Int
  id_jugador_calificado Int
  id_jugador_votante    Int
  calificacion          Int
  encuesta_partido      Encuesta_Partido @relation(fields: [id_encuesta_partido], references: [id])
}
